# Deployment workflow to be used for Jira reporting
name: Deploy on push to Developmnet or Staging

on:
  push:
    branches: ["alpha", "stable"]

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    name: Deploy on push
    # IMPORTANT: the workflow must have write access to deployments, otherwise the action will fail.
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check branch name
        id: check-branch-name
        run: |
          if [ ${{ github.ref_name }} == "alpha" ]; then
            echo 'DEPLOY_ENVIRONMENT=Development' >> $GITHUB_OUTPUT
            echo " Deploying to Development environment"
          elif [ ${{ github.ref_name }} == "stable" ]; then
            echo 'DEPLOY_ENVIRONMENT=Staging' >> $GITHUB_OUTPUT
            echo " Deploying to Staging environment"
          else
            echo 'DEPLOY_ENVIRONMENT=none' >> $GITHUB_OUTPUT
            echo " Branch name: ${{ github.ref_name }} not supported, Exiting"
            exit 1
          fi

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: ${{steps.check-branch-name.outputs.DEPLOY_ENVIRONMENT}}

      - name: Update deployment status (success)
        if: ${{ success() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: ${{ failure() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (cancelled)
        if: ${{ cancelled() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          state: 'cancelled'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
