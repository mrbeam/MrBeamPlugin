<!-- Lens calibration -->
<div>
    <div class="camera-calibration-title">
        <button class="btn" data-bind="click: abortLensCalibration">
            <img src="plugin/mrbeam/static/img/back_arrow.svg" alt="">
        </button>
        <span>{{ _('Lens Calibration') }}</span>
    </div>

    <p>{{ _('The lens calibration removes the fish-eye effect of the camera. Use this if you are dissatisfied with the precision of the camera and a new corner calibration does not make it better.') }}</p>
    {#    <p>{{ _('Keep in mind that it is unlikely that you will arrive to a better precision than 1mm accross the whole surface of the image.') }}</p>#}
    {#    <p>{{ _('The precision of the camera system is dictated by how much lens distortion you will find. Also called \'Fish-eye effect\', this distortion is usually corrected during the assembly of your Mr Beam.') }}</p>#}
    {#    <p>{{ _('You may want to do that calibration step again if you are dissatisfied with the precision of the camera and a new calibration of the corners does not make it better.#}
    {#    Keep in mind that it is unlikely that you will arrive to a better precision than 1mm accross the whole surface of the image.') }}</p>#}
    <p>{{ _('To test the quality of your current lens calibration please follow the instructions shown in our Knowledge Base article %(opening_tag)sTest your camera calibration%(closing_tag)s.',
            opening_tag='<a href="" target="_blank">',
            closing_tag='</a>') }}</p>
    <small class="muted">
        {{ _('If you do a new lens calibration and later want to go back to the default calibration, you can reset to factory settings here:') }}
        <button class="btn btn-mini btn-default" data-bind="click: restoreFactory">{{ _('Restore .npz') }}</button>
    </small>

    <h4>{{ _('Steps') }}</h4>
    <ol class="camera-calibration-steps">
        <li>{{ _('Download and print %(opening_tag)sthis chessboard%(closing_tag)s. If you print it on a regular sheet of paper, then please make sure to keep it flat against another surface (e.g. a flat piece of wood or foam board).',
            opening_tag='<a href="/plugin/mrbeam/static/docs/calibration_chessboard_pattern.pdf" target="_blank">',
            closing_tag='</a>') }}
        </li>
        <li>{{ _('Place it inside your Mr Beam, horizontally.') }}</li>
        <li>
            <div id="lens_calibration_steps_and_heatmap">
                <div>
                    {{ _('Start the calibration by clicking on the button, and then follow these steps until the picture of the working area in the right is mostly green (9-20 times):') }}
                    <ul>
                        <li>{{ _('Press the button on your Mr Beam to take a picture of the chessboard: the Status Lights will flash in blue.') }}</li>
                        <li>{{ _('Wait for the blue flashing to stop and check if the new picture has a green check on it. If it shows a red cross or takes too long, delete it and take a new picture.') }}</li>
                        <li>{{ _('Move the chessboard to a new position.') }}</li>
                    </ul>
                </div>
                <div>
                    <svg id="heatmap_container" version="1.1" enable-background="new 0 0 211 141"
                         viewBox="0 0 3100 2500" height="100%" width="100%" y="0px" x="0px">
                        <radialGradient gradientUnits="userSpaceOnUse"
                                        gradientTransform="matrix(1,0,0,0.9565,0,-7.4897)"
                                        r="91.003799" cy="81.540604" cx="105.5" id="SVGID_1_">
                            <stop id="stop2" style="stop-color:#FFFFFF" offset="0.291"></stop>
                            <stop id="stop4" style="stop-color:#E6E6E6" offset="1"></stop>
                        </radialGradient>
                        <g transform="translate(-388,-43.574219)"
                           id="g879">
                            <path id="polygon9"
                                  d="m 585.47308,330.57446 51.08796,52.78368 0.28863,1760.33376 -53.41506,54.1367 27.61853,30.7213 53.77585,-50.4024 H 3166.7861 l 53.7758,50.4385 27.6366,-30.9378 -53.397,-53.9743 0.3427,-1760.17145 51.1601,-52.5672 -26.5542,-27.11342 -51.7554,52.33269 H 664.26976 l -52.08013,-52.31465 z"
                                  style="fill:#ffffff;stroke:#010202;stroke-width:18.03953362;stroke-linejoin:round;stroke-miterlimit:10"></path>
                            <path id="line39"
                                  d="m 966.01703,2022.3941 52.63937,-52.6574 m 1731.7953,-1407.08362 52.6572,-52.63939 m 0,1512.38041 -52.6572,-52.6574 M 1018.6564,562.65308 966.01703,510.01369 m 52.63937,52.63939 H 2750.4517 V 1969.7367 H 1018.6564 Z M 874.9174,355.19844 V 2177.1914 M 2949.4638,355.19844 V 2177.1914 m 182.3977,-96.1147 a 44.413331,44.413331 0 0 1 -44.4133,44.4134 44.413331,44.413331 0 0 1 -44.4133,-44.4134 44.413331,44.413331 0 0 1 44.4133,-44.4133 44.413331,44.413331 0 0 1 44.4133,44.4133 z M 664.26976,353.39447 m 0,0 m 2530.53194,1790.27943 -28.0156,34.4736 m 1.2086,-1821.99298 27.1495,27.34795 M 636.84969,2143.6919 l 27.9793,34.4556 m -0.55923,-1821.99298 -27.70878,27.2036"
                                  style="fill:none;stroke:#000000;stroke-width:13.52965069;stroke-linecap:round;stroke-miterlimit:10"></path>
                            <rect id="rect976"
                                  style="opacity:1;vector-effect:none;fill:#b3b3b3;fill-opacity:1;stroke:none;stroke-width:12.61347008;stroke-linecap:round;stroke-linejoin:bevel;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:normal"
                                  width="1731.795" height="1407.0836" x="1018.6564" y="562.65308"></rect>
                        </g>
                        <g id="segment_group" transform="translate(340, 250),scale(1.1, 1.2)"></g>
                    </svg>
                </div>
            </div>
            <button class="btn btn-primary" data-bind="click: startLensCalibration, visible: !lensCalibrationActive()">
                {{ _('Start Calibration') }}
            </button>
            <div style="width: 70%">
                <ul id="lens_correction_image_list"
                    data-bind="visible: lensCalibrationActive(), foreach: { data: rawPicSelection, as: 'pic' }">
                    <li class="lens_correction_image_thumb"
                        data-bind="	style: { backgroundImage: pic.state !== 'camera_processing' ? 'url('+pic.url+'?'+pic.state+')' : '' },
                            event:{ mouseover: $root.highlightHeatmap, mouseout: $root.dehighlightHeatmap }"
                        onclick="this.classList.remove('zoom')"> <!-- toggle class messes with rm btn -->
                        <div class="btn-group">
                            <button class="btn btn-mini btn-default"
                                    data-bind="visible: (pic.path !== null)"
                                    onclick="this.parentElement.parentElement.classList.add('zoom'); event.stopPropagation();">
                                <i class="icon icon-search"></i>
                            </button>
                            <button class="btn btn-mini btn-danger"
                                    data-bind="visible: (pic.path !== null), click: $parent.delRawPic">
                                <i class="icon icon-trash"></i>
                            </button>
                        </div>
                        <span class="chessboard_cal_duration pull-right" data-bind="visible: pic.tm_end !== null">
                    <i class="icon icon-time"></i> <span data-bind="text: pic.processing_duration"></span><br/>
                </span>
                        <i class="status_icon icon icon-save"
                           data-bind="visible: pic.state === 'camera_processing' || pic.state === 'pending'  || pic.state === 'queued' "></i>
                        <i class="status_icon icon icon-spinner icon-spin"
                           data-bind="visible: pic.state === 'processing'"></i>
                        <i class="status_icon icon icon-ok" style="color: #00ff00;"
                           data-bind="visible: pic.state === 'success'"></i>
                        <i class="status_icon icon icon-remove" style="color: #ff0000;"
                           data-bind="visible: pic.state === 'fail'"></i>
                        <i class="status_icon icon icon-camera" data-bind="visible: pic.state === 'missing'"></i>
                    </li>
                </ul>
            </div>
        </li>
        <div style="margin-top:1em;" data-bind="visible: lensCalibrationActive()">
            <button class="btn btn-primary"
                    data-bind="click: saveLensCalibrationData,
                               visible: hasMinBoardsFound(),
                           enable: !lensCalibrationBusy()">
                <!-- " && !lensCalibrationComplete()"> TODO lens calibration data remembers which pictures has beem used with it -->
                {{ _('Create a new Calibration File') }}</button>
            <button class="btn btn-default" data-bind="click: abortLensCalibration">
                {{ _('Cancel') }}</button>
        </div>
    </ol>
</div>
