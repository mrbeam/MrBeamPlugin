
<div style="position:relative;">
	<svg id="calibration_svg" style="max-width: 80vh; border:1px solid lightgray" width="100%" height="100%" viewBox="0 0 512 384" data-bind="attr: {viewBox: calSvgViewBox()}">
		<defs>
            <symbol id="cross">
                <path data-bind="attr: {d: svgCross()}" fill="none" />
            </symbol>
		</defs>
        <g id="obj_height_scale">
            <image style="cursor:crosshair;" data-bind="attr: {href: cornerCalImgUrl(), width:calImgWidth(), height:calImgHeight() }, click: userClick" />
        </g>
        <g id="corners" class="calibration_click_indicator"
           style="pointer-events: none;"
           data-bind="attr: { visibility: correctedMarkersVisibility() }">
            <use id="click_NW" href="#cross" x="-100" y="-100" />
            <use id="click_NE" href="#cross" x="-100" y="-100" />
            <use id="click_SE" href="#cross" x="-100" y="-100" />
            <use id="click_SW" href="#cross" x="-100" y="-100" />
        </g>
        <g id="cropped_view_corners" class="calibration_click_indicator"
           transform="scale(1)"
           data-bind="attr: { transform: zMarkersTransform(), visibility: croppedMarkersVisibility() }">
		   <use href="#cross" stroke="blue" data-bind="attr: { x: -crossSize(),                         y: -crossSize() }" />
		   <use href="#cross" stroke="blue" data-bind="attr: { x: calImgWidth()-crossSize(), y: -crossSize() }" />
		   <use href="#cross" stroke="blue" data-bind="attr: { x: -crossSize(),                         y: calImgHeight()-crossSize() }" />
		   <use href="#cross" stroke="blue" data-bind="attr: { x: calImgWidth()-crossSize(), y: calImgHeight()-crossSize() }" />
        </g>
	</svg>
	<div>
		<div>
			<a class="accordion-toggle" data-bind="click:loadUndistortedPicture, visible: !cornerCalibrationActive()"><i class="icon-repeat"></i> {{ _('refresh') }}</a>
			<div class="marker_selection_desc calibration_waiting_for_picture" >
				<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['NW'] }"><i class="icon-ok"></i> NW</div>
				<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['SW'] }"><i class="icon-ok"></i> SW</div>
				<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['SE'] }"><i class="icon-ok"></i> SE</div>
				<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['NE'] }"><i class="icon-ok"></i> NE</div>
				<div class="marker_found_indicator" data-bind="visible: !cal_img_ready()"><i class="icon-spinner icon-spin"></i> {{ _('detecting') }}</div>
			</div>
            <a class="muted" data-bind="attr: { href: cornerCalImgUrl() }"> {{ _('Download this image') }}</a>
		</div>
		<div class="marker_selection_desc calibration_help" data-bind="visible: cal_img_ready() && !cornerCalibrationActive()">
			<div>{{_('Click on the arrow head of the marker in the magnified picture.') }}<br/>
			{{_('Continue with the other markers as the picture changes.') }}<br/>
			{{_('Once all arrowheads are marked the calibration is finished.')}}</div>
			<div style="margin-top:1em;">
				<button class="btn btn-default" data-bind="click: startCornerCalibration">{{ _('Start Calibration') }}</button>
			</div>
		</div>
		<div class="marker_selection_desc calibration_summary">
			<div data-bind="css: {complete: cornerCalibrationComplete()}">
				<div id="calibration_picture_control"
                     style="position: fixed;right: 0;top: 30vh;padding: 1em;border: 1px solid gray;"
                     data-bind="visible: window.mrbeam.isWatterottMode()">
					Picture:<br />
					<input type="radio" name="picture_type" value="raw" data-bind="checked: picType" /> Raw<br />
					<input type="radio" name="picture_type" value="lens_correction" data-bind="checked: picType" /> Lens corrected<br />
					<input type="radio" name="picture_type" value="cropped" data-bind="checked: picType" /> Cropped<br />
					<br/>
					Zoom: <span data-bind="text: calSvgScale" ></span> <br/>
					<button class="btn-default" data-bind="click: smaller">-</button><button class="btn-default" data-bind="click: larger">+</button>
					<br />
					Move:
					<div>
						<div class="btn-group">
							<button class="btn-default" data-bind="click: move(-50,-50)">&#8598;</button>
							<button class="btn-default" data-bind="click: move(0,-50)">&#8593;</button>
							<button class="btn-default" data-bind="click: move(50,-50)">&#8599;</button>
						</div><br/>
						<div class="btn-group">
							<button class="btn-default" data-bind="click: move(-50,0)">&#8592;</button>
							<button class="btn-default" data-bind="click: resetMove">*</button>
							<button class="btn-default" data-bind="click: move(50,0)">&#8594;</button>
						</div><br/>
						<div class="btn-group">
							<button class="btn-default" data-bind="click: move(-50,50)">&#8601;</button>
							<button class="btn-default" data-bind="click: move(0,50)">&#8595;</button>
							<button class="btn-default" data-bind="click: move(50,50)">&#8600;</button>
						</div>

					</div>
				</div>
                <!-- "Debug" values of where the user pointed the tip of the arrow. -->
				<div data-bind="visible: cal_img_ready() && cornerCalibrationActive()">
					<div id="NW" class="cal-row"><div class="cal-arrow NW"></div> North West: <span data-bind="text: __format_point(currentResults()['NW'])"></span></div>
					<div id="SW" class="cal-row"><div class="cal-arrow SW"></div> South West: <span data-bind="text: __format_point(currentResults()['SW'])"></span></div>
					<div id="SE" class="cal-row"><div class="cal-arrow SE"></div> South East: <span data-bind="text: __format_point(currentResults()['SE'])"></span></div>
					<div id="NE" class="cal-row"><div class="cal-arrow NE"></div> North East: <span data-bind="text: __format_point(currentResults()['NE'])"></span></div>
				</div>
			</div>
			<div style="margin-top:1em;" data-bind="visible: cornerCalibrationActive()">
          <button class="btn btn-default"
                  data-bind="click: previousMarker">
              {{ _('Previous') }}</button>
          <button class="btn btn-default"
                  data-bind="click: nextMarker">
              {{ _('Next') }}</button>
          <button class="btn btn-default"
                  data-bind="click: saveCornerCalibrationData, visible: cornerCalibrationComplete()">
              {{ _('Save Calibration') }}</button>
          <button class="btn btn-warning"
                  data-bind="click: abortCalibration">
              {{ _('Cancel') }}</button>
			</div>
		</div>
	</div>
    <!-- Debug images of the marker detection present in each corner of the screen -->
    <div data-bind="visible: window.mrbeam.isWatterottMode()">
        <div>
            <img id="debug_NW_img" class="marker_debug_image" data-bind="attr: {src: dbNWImgUrl()}"/>
            <img id="debug_NE_img" class="marker_debug_image" data-bind="attr: {src: dbNEImgUrl()}"/>
        </div>
        <div>
            <img id="debug_SW_img" class="marker_debug_image" data-bind="attr: {src: dbSWImgUrl()}"/>
            <img id="debug_SE_img" class="marker_debug_image" data-bind="attr: {src: dbSEImgUrl()}"/>
        </div>
    </div>
</div>

