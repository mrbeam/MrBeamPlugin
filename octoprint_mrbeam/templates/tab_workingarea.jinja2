				<div class="tab-pane active" id="workingarea">
					<div class="container-fluid">
						<div class="row-fluid">
							<div class="span4 accordion full-col" style="margin-bottom:0;">
                                <div id="workingarea_left">
								<div id="state_accordion">
									<div class="accordion-heading" id="mrb_state_header">
										<div class="accordion-toggle"><i class="icon-info-sign"></i> {{ _('State') }}:</div>
                                        <span title="{{ _("Mr Beam's current state") }}">
                                            <i class="icon-inbox"></i> <span data-bind="text: state.stateString"></span>
                                        </span>
                                        <span title="{{ _("Your current Internet connection state") }}" style="margin-left: 15px;">
                                            <i class="icon-globe"></i>
                                            <span class="show_only_online">{{ _("Online") }}</span>
                                            <span class="show_only_offline">{{ _("Offline") }}</span>
                                        </span>
									</div>
									<div id="statusbox">
										<div class="accordion-body collapse in" id="mrb_state_wrapper" data-bind="visible: loginState.isUser() ">
											<div class="accordion-inner">

												<div data-bind="visible:(!state.isLocked() && !state.isConnecting())">

													<!--
													{{ _('File') }}: <strong data-bind="text: filename"></strong>&nbsp;<strong data-bind="visible: sd">(SD)</strong><br>
													{{ _('Timelapse') }}: <strong data-bind="text: timelapseString"></strong><br>
													{{ _('Approx. Total Job Time') }}: <strong data-bind="text: state.estimatedPrintTimeString"></strong><br>
													-->
                                    <div data-bind="visible: state.isPrinting() || state.isPaused()">

                                        <div>
                                            <div id="job_printtime">{{ _('Laser Time:') }} <strong
                                                    data-bind="text: state.printTimeString"></strong>&nbsp;/ <span
                                                    data-bind="text: readyToLaser.estimated_duration"></span></div>
                                        </div>
                                        <div class="progress progress-striped active">
                                            <div class="bar" id="job_progressBar"
                                                 data-bind="style: { width: state.progressString() + '%' }">
                                                &nbsp;{{ _('Processed') }} : <strong
                                                    data-bind="text: state.byteString"></strong></div>
                                        </div>

                                    </div>
                                    <!--                                {{ _('Print Time') }}: <strong data-bind="text: printTimeString"></strong><br>
																					{{ _('Print Time Left') }}: <strong data-bind="text: printTimeLeftString"></strong><br>-->


													<div class="row-fluid print-control btn-group" style="display: none;" data-bind="visible: loginState.isUser">
														<button id="laser_button" class="btn btn-danger span6"
                                                                data-bind="click: conversion.show_conversion_dialog, enable: state.isOperational() && state.isReady() && !state.isPrinting() && !state.isPaused() && loginState.isUser() && !workingArea.working_area_empty(), attr: {title: state.titlePrintButton}"
                                                                id="job_print">
                                                            <i class="icon-white icon-fire"
                                                               data-bind="css: { 'wobble': state.isPrinting()}"></i>
                                                            <span>{{ _('Laser') }}</span>
                                                        </button>
                                                        <button class="btn span6" id="job_pause"
                                                                data-bind="click: state.pause, enable: state.isOperational() && (state.isPrinting() || state.isPaused()) && loginState.isUser(), css: {active: state.isPaused()}, attr: {title: state.titlePauseButton}">
                                                            <i data-bind="css: {'icon-pause': !state.isPaused(), 'icon-play': state.isPaused()}"></i>
                                                            <span data-bind="visible: !state.isPaused()">{{ _('Pause') }}</span>
                                                            <span data-bind="visible: state.isPaused()">{{ _('Resume') }}</span>
                                                        </button>
                                                    </div>
												</div>
											</div>
										</div>

										<div id="wa_view_settings" class="accordion-inner">
											<div class="accordion-heading ">
												<a href="#wa_view_settings_body" class="dropdown" data-toggle="collapse" aria-expanded="false">
													<i class="icon-camera"></i> {{ _('Preview') }}:
												</a>
												<span class="caret" style="vertical-align: middle"></span>
											</div>
											<div class="collapse" id="wa_view_settings_body">
												<div class="accordion-inner">
													<div data-bind="style: { display: camera.imgResolutionNoticeDisplay() }">
													<span style="font-weight: bold">Low</span> Picture Quality
														<span class="muted">
															- Open the lid and keep your hands off the working area
															for a few seconds to receive a higher resolution image
														</span>
													</div>
													<div>
														<label>
															{{ _('Brightness') }}:
														</label>
														<i class="icon-adjust"></i>
{#														<input type="range" min="0" max="1" step="0.01"#}
{#															   style="width:80%;"#}
{#															   class="decent_input img_adjust"#}
{#															   value="0" data-bind="value: previewImgOpacity, valueUpdate: 'input'">#}
                                                        <input id="preview-brightness" type="range" min="0" max="1" step="0.01"
                                                           style="width:80%;"
                                                           class="mrb_slider"
                                                           value="0" data-bind="value: previewImgOpacity, valueUpdate: 'input'">
													</div>
													<div>
														<label>
															{{ _('Zoom') }}: <span data-bind="text:zoom_factor_text"></span>
														</label>
														<div id="zoom_monitor_wrapper">
															<div id="zoom_monitor" data-bind="
																	style: { 'padding-bottom': (100 * hwRatio())+'%' },
																	event: { mousewheel: wheel_zoom_monitor }
																 ">
                                                <div data-bind="style: {
																		width: (100*zoom())+'%',
																		'padding-bottom': (100*zoom()*hwRatio())+'%',
																		left: (zoomOffX() / workingAreaWidthMM() * 100) + '%',
																		top: (zoomOffY() / workingAreaHeightMM() * 100) + '%'
																	}, event: { mousemove: mouse_drag_monitor }">
																</div>
															</div>
															<div id="zoom_monitor_hint" data-bind="visible: (zoom() === 1)" class="muted">{{ _('Scroll to zoom') }}</div>
														</div>
													</div>
                                                    <div class="experimental_feature_beta">
                                                        {{ _('Object height') }}
{#                                                         Translators: millimiters, unit of length#}
                                                        <input class="decent_input" type="number" min="0" max="38" step="1" id="objectZ_input" value="0"
                                                               data-bind="value: camera.objectZ, valueUpdate: 'input'"
                                                               style="width:3.5em; display: inline; margin: 0; padding-right:0;"
                                                        /> {{ _('mm') }}
                                                    </div>
												</div>
											</div>
										</div>

										<div id="mrb_control" class="accordion-inner" data-bind="visible: state.isReady() || state.isLocked() || state.isFlashing()">
											<div data-bind="visible: state.isFlashing() ">
												{{ _('Firmware update in progress') }}
												<div id="flashing_progress" class="progress progress-striped active" style="width: 100%;">
													<div class="bar" style="width: 100%;"></div>
												</div>
												<span class="icon-exclamation-sign"></span>
												{{ _('Do not power off the machine during the flashing process.') }}
											</div>
											<div data-bind="visible: !state.isLocked() && !state.isFlashing() ">
											<div class="accordion-heading" id="mrb_state_header">
												<a href="#control_btns" class="dropdown" data-toggle="collapse" aria-expanded="false">
												    <i class="icon-screenshot"></i> {{ _('Position') }}:
												</a>
                                                <span class="caret" style="vertical-align: middle"></span>
												<input id="manual_position" class="decent_input" data-bind="attr:{placeholder: state.laserPos}" onsubmit="control.manualPosition"/>
											</div>
												<!--<i class="icon-edit"></i>-->

												<div class="clearfix"></div>
												<div class="collapse" id="control_btns">

													<div class="jog-panel" id="control_xyaxis">
														{{ _('XY-Axes') }}
														<div>
															<a id="control-yinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('y',1) }"><i class="icon-circle-arrow-up"></i></a>
														</div>
														<div>
															<a id="control-xdec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('x',-1) }"><i class="icon-circle-arrow-left"></i></a>
															<a id="control-xyhome" data-bind="enable: (state.isOperational() || state.isLocked()) && !state.isPrinting() && loginState.isUser(), click: function() { control.sendHomeCommand(['x', 'y']) }"><i class="icon-home"></i></a>
															<a id="control-xinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('x',1) }"><i class="icon-circle-arrow-right"></i></a>
														</div>
														<div>
															<a id="control-ydec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('y',-1) }"><i class="icon-circle-arrow-down"></i></a>
														</div>
													</div>

													<div class="jog-panel" id="control_zaxis">
														<div data-bind="visible: control.showZAxis">
															{{ _('Z-Axis') }}
															<div role="group" aria-label="z-axis control">
																<a id="control-zinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('z',1) }"><i class="icon-chevron-sign-up"></i></a>
																<a ic="control-zdec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('z',-1) }"><i class="icon-chevron-sign-down"></i></a>
															</div>
														</div>
	<!--													<div>
															<a id="set_coordinate_origin_btn" class="" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: control.setCoordinateOrigin" title="set coordinate origin"><i class="icon-screenshot"></i></a>
														</div>-->
													</div>

													<div class="clearfix"></div>

													<div class="distance">
														{{ _('Jog distance:') }}
                                                        {# Translators: millimiters, unit of length #}
														<input class="decent_input" type="number" min="0.1" max="100" step="10" id="jogDistance"
															   data-bind="value: control.distance, valueUpdate: 'input'"
															   style="width:3.5em; display: inline; margin: 0; padding-right:0;"
														/> {{ _('mm') }}
													</div>
												</div>
											</div>
										</div>

										<div class="accordion-body in" id="mrb_connection_wrapper"
											 data-bind="visible: !state.isFlashing() && state.isErrorOrClosed() && loginState.isUser()">
											<div class="accordion-inner">
												<label for="connection_ports" data-bind="css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()">{{ _('Serial Port') }}</label>
												<select id="connection_ports" data-bind="options: connection.portOptions, optionsCaption: 'AUTO', value: connection.selectedPort, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"></select>
												<label for="connection_baudrates" data-bind="css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()">{{ _('Baudrate') }}</label>
												<select id="connection_baudrates" data-bind="options: connection.baudrateOptions, optionsCaption: 'AUTO', value: connection.selectedBaudrate, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"></select>
	<!--											<label class="checkbox">
													<input type="checkbox" id="connection_save" data-bind="checked: saveSettings, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"> {{ _('Save connection settings') }}
												</label>-->
												<label class="checkbox">
													<input type="checkbox" id="connection_autoconnect" data-bind="checked: settings.serial_autoconnect, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"> {{ _('Auto-connect on server startup') }}
												</label>
												<button class="btn btn-block" id="printer_connect" data-bind="click: connection.connect, text: connection.buttonText(), enable: loginState.isUser()">{{ _('Connect') }}</button>
											</div>
										</div>
									</div>
								</div>

								<div data-bind="visible: loginState.isUser" id="connection_accordion"></div>



                                <div class="accordion-group" id="working_area_files">
									<div class="accordion-heading">
										<div class="accordion-toggle unselectable"><i class="icon-list"></i> {{ _('Designs') }}</div>
										<a id="clear_working_area_btn" class="accordion-toggle pull-right" data-bind="style: {opacity: working_area_empty() ? 0.75 : 1}, click: clear" style="margin-right: 1em;" ><i class="icon-remove-sign"></i> {{ _('Clear all') }}</a>
									</div>
									<div class="accordion-body">
										<div class="accordion-inner">
											<div class="row-fluid btn-group">
												<div class="btn span4" id="working_area_tab_file_btn" data-bind="click: function(){$('#designlib_tab_btn').tab('show');}"><i class="icon-file"></i> {{ _('File') }} </div>
												<div class="btn span4" id="working_area_tab_text_btn" data-bind="click: newQuickText"><i class="icon-font"></i> {{ _('Text') }} </div>
												<div class="btn span4" id="working_area_tab_shape_btn" data-bind="click: newQuickShape"><i class="icon-heart-empty"></i> {{ _('Shape') }} </div>
{#												<div class="btn span3" id="working_area_tab_scan_btn" data-bind="click: enableScanMode"><i class="icon-copy"></i> {{ _('Scan') }} </div>#}
{#												Camera not working, disabled till we fixed this. then set spans of the buttons above to span4 >#}
{#												<div class="btn span4" data-bind="visible:files.hasCamera(), css: {disabled: !$root.loginState.isUser()}, click: files.takePhoto" >#}
{#													<i class="icon-camera icon-white"></i>#}
{#													<span>{{ _('Photo') }}</span>#}
{#												</div>#}
											</div>
                                        </div>

										<div class="collapse in" id="wa_filelist">
											<div class="accordion-inner">
												<div class="scrollable" data-bind="foreach: placedDesigns">
													<div class="entry" data-bind="attr: { id: $data.id}, template: { name: $root.templateFor($data), data: $data }"></div>
												</div>

												<script type="text/html" id="wa_template_machinecode">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
														<div class="title pull-left" data-bind="text: name, attr: {title: name}"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini remove-design-btn" data-bind="click: function(){ $root.removeGcode($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" ></div>
													</div>
												</script>

												<script type="text/html" id="wa_template_model_svg">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
{#                                                        <div data-bind="text: ko.toJSON($data, function(k,v){return (k=='parent') ? undefined : v})"></div>#}
                                                        <div data-bind="visible: components_engrave" class="pull-left wa_used_color" style="background-image: url('/plugin/mrbeam/static/img/img_and_fills2.svg')"></div>
                                                        <!-- ko foreach: {data: components, as: 'myComponent'} -->
														    <div data-bind="style: {'background-color': myComponent}" class="pull-left wa_used_color"></div>
                                                        <!-- /ko -->


														<div class="title pull-left" data-bind="text: name, attr: {title: name}"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
															<div class="btn btn-mini remove-design-btn" data-bind="click: function() { $root.removeSVG($data); }, attr: {mrb_name: $data.name}"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" >
															<div class="local_transformation muted">
																<i class="icon-move" title="{{ _('translation') }}"></i>
																<input class="decent_input translation wide" type="text" value="0, 0" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
                                                <i class="icon-repeat" title="{{ _('rotation') }}"></i>
                                                <input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
                                                </br>
                                                <i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
                                                <input class="decent_input horizontal" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
                                                <i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
                                                <input class="decent_input vertical" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
                                                <i class="icon-resize-full" title="{{ _('scale') }}"></i>
                                                <input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
                                                </br>
                                                <i class="icon-th" title="{{ _('multiply') }}"></i>
                                                <input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>

                                                <i class="icon-copy" title="{{ _('duplicate') }}"></i>
                                                <a href="#" data-bind="event: {
																			click: function(d, event){ $root.duplicateSVG($data, event); }
																		} ">{{ _('duplicate') }}</a>
																<div class='dropdown pull-right experimental_feature_beta' style='display:inline-block;' >
																	<a href="#" class="wa_list_item_burger_menu dropdown-toggle" data-toggle="dropdown">
																		<i class="icon-reorder"></i><b class="caret"></b>
																	</a>
																	<ul class="dropdown-menu">
																		<li>
																			<i class="icon-sitemap" title="{{ _('split') }}"></i> split
																			<a href="#" data-bind="event: {click: function(d, event){ $root.splitSVG($data, event, 'stroke-color'); }} ">{{ _('by stroke color') }}</a>
																			<a href="#" data-bind="event: {click: function(d, event){ $root.splitSVG($data, event, 'non-intersecting'); }} ">{{ _('into shapes (keep overlapping)') }}</a>
																			<a href="#" data-bind="event: {click: function(d, event){ $root.splitSVG($data, event, 'vertically'); }} ">{{ _('vertically') }}</a>
																			<a href="#" data-bind="event: {click: function(d, event){ $root.splitSVG($data, event, 'horizontally'); }} ">{{ _('horizontally') }}</a>
																		</li>
																	    <li class="divider experimental_feature_dev"></li>
																		<li class="experimental_feature_dev">
																			<i class="icon-copy" title="{{ _('duplicate') }}"></i>
																			<a href="#" data-bind="event: {
																				click: function(d, event){ $root.duplicateSVG($data, event); }
																				} ">{{ _('duplicate') }}</a>
																		</li>
																	</ul>
																</div>

															</div>
															<div class="misfit_warning">
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>
																<span>{{ _('Design exceeds the working area.') }}</span>
																<a href="#" name="working_area_tab_make_it_fit" data-bind="click: function(){ $root.fitSVG($data) } ">{{ _('Make it fit') }}</a>
															</div>
														</div>
													</div>
												</script>

                                <script type="text/html" id="wa_template_model_img">
                                    <div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
                                        <div class="pull-left wa_used_color" style="background-image: url('/plugin/mrbeam/static/img/img_and_fills2.svg')"></div>
                                        <div class="title pull-left" data-bind="text: name, attr: {title: name}"></div>
                                        <div class="btn-group action-buttons pull-right">
                                            <div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
                                            <div class="btn btn-mini remove-design-btn" data-bind="click: function() { $root.removeIMG($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
                                        </div>
                                        <div class="detail_information" >
                                            <div class="local_transformation muted">
                                                <i class="icon-move" title="{{ _('translation') }}"></i>
                                                <input class="decent_input translation wide" type="text" value="0,0" data-bind="event: {
                                                            keyup: function(d, event){ $root.svgManualTranslate($data, event); },
                                                            blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
                                                <i class="icon-repeat" title="{{ _('rotation') }}"></i>
                                                <input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
                                                </br>
                                                <i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
                                                <input class="decent_input horizontal" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
                                                <i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
                                                <input class="decent_input vertical" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
                                                <i class="icon-resize-full" title="{{ _('scale') }}"></i>
                                                <input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
                                                </br>
                                                <i class="icon-th" title="{{ _('multiply') }}"></i>
                                                <input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>
                                                <i class="icon-copy" title="{{ _('duplicate') }}"></i>
                                                <a href="#" data-bind="event: {
																			click: function(d, event){ $root.duplicateSVG($data, event); }
																		} ">{{ _('duplicate') }}</a>

                                                {#                                                               We disabled image processing options for Safari: svg filters don't really work in safari: https://github.com/mrbeam/MrBeamPlugin/issues/586 #}
                                                <div class="accordion md-accordion working_area_image_preprocessing"
                                                     data-bind="visible: !window.mrbeam.browser.is_safari">
                                                    <div class="card">
                                                        <div class="card-header working_area_image_preprocessing_heading">
                                                            <div class="mb-0 working_area_image_preprocessing_link">
                                                                <button class="btn-link collapsed image-preprocessing-collapsible"
                                                                        type="button" data-toggle="collapse"
                                                                        data-bind="attr: { 'data-target': '#preprocessing_sliders_' + $data.id }"
                                                                        aria-expanded="true"
                                                                        aria-controls="collapseOne">
                                                                    {{ _('Image Preprocessing') }}
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div class="collapse working_area_image_preprocessing_sliders"
                                                             data-bind="attr: { id: 'preprocessing_sliders_' + $data.id }">
                                                            <div class="card-body">
                                                                {#                                                                      # We disabled image processing options for Safari: svg filters don't really work in safari: https://github.com/mrbeam/MrBeamPlugin/issues/586 #}
                                                                <div data-bind="visible: !window.mrbeam.browser.is_safari">
                                                                    <div class="img_adjust_ui pull-left">
                                                                        <div class="img-preprocess-cont">
                                                                            <i class="icon-adjust"
                                                                               title="{{ _('contrast') }}"></i>
                                                                            <input id="img-preprocess-contrast"
                                                                                   class="mrb_slider small"
                                                                                   type="range" min="1" max="5"
                                                                                   value="1" step="0.05" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualAdjust($data, event); },
																							input: function(d, event){ $root.imgManualAdjust($data, event); },
																							blur: function(d, event){ $root.imgManualAdjust($data, event); }} "/>
                                                                        </div>
                                                                        <div class="img-preprocess-cont">
                                                                            <i class="icon-sun"
                                                                               title="{{ _('brightness') }}"></i>
                                                                            <input id="img-preprocess-brightness"
                                                                                   class="mrb_slider small"
                                                                                   type="range" min="-0.8" max="0.8"
                                                                                   value="0" step="0.05" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualAdjust($data, event); },
																							input: function(d, event){ $root.imgManualAdjust($data, event); },
																							blur: function(d, event){ $root.imgManualAdjust($data, event); }} "/>
                                                                            </br>
                                                                        </div>
                                                                        <div class="img-preprocess-cont">
                                                                            <i class="icon-magic"
                                                                               title="{{ _('sharpen') }}"></i>
                                                                            <input id="img-preprocess-sharpen"
                                                                                   class="mrb_slider small"
                                                                                   type="range" min="0" max="40"
                                                                                   value="0" step="1" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualSharpen($data, event); },
																							input: function(d, event){ $root.imgManualSharpen($data, event); },
																							blur: function(d, event){ $root.imgManualSharpen($data, event); }} "/>
																				<br/>
                                                                        </div>
                                                                        <div class="img-preprocess-cont">
                                                                            <i class="" title="{{ _('gamma') }}">Γ</i>
                                                                            <input id="img-preprocess-gamma"
                                                                                   class="mrb_slider small"
                                                                                   type="range" min="0.2" max="1.8"
                                                                                   value="1" step="0.05" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualAdjust($data, event); },
																							input: function(d, event){ $root.imgManualAdjust($data, event); },
																							blur: function(d, event){ $root.imgManualAdjust($data, event); }} "/>
                                                                        </div>

                                                                    <div class="img_crop_ui pull-right">
                                                                        <input class="decent_input crop_top img_adjust"
                                                                               style="grid-area: tc; align-self: start"
                                                                               type="number" min="0" max="99" value="0"
                                                                               step="0.5" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualCrop($data, event); },
																							input: function(d, event){ $root.imgManualCrop($data, event); },
																							blur: function(d, event){ $root.imgManualCrop($data, event); }} "/>
                                                                        <input class="decent_input crop_left img_adjust"
                                                                               style="grid-area: cl;" type="number"
                                                                               min="0" max="99" value="0" step="0.5"
                                                                               data-bind="event: {
																							keyup: function(d, event){ $root.imgManualCrop($data, event); },
																							input: function(d, event){ $root.imgManualCrop($data, event); },
																							blur: function(d, event){ $root.imgManualCrop($data, event); }} "/>
                                                                        <div style='grid-area:cc'><i
                                                                                class="icon icon-crop"
                                                                                title="{{ _('crop') }}"></i></div>
                                                                        <input class="decent_input crop_right img_adjust"
                                                                               style="grid-area: cr;" type="number"
                                                                               min="0" max="99" value="0" step="0.5"
                                                                               data-bind="event: {
																							keyup: function(d, event){ $root.imgManualCrop($data, event); },
																							input: function(d, event){ $root.imgManualCrop($data, event); },
																							blur: function(d, event){ $root.imgManualCrop($data, event); }} "/>
                                                                        <input class="decent_input crop_bottom img_adjust"
                                                                               style="grid-area: bc; align-self: end"
                                                                               type="number" min="0" max="99" value="0"
                                                                               step="0.5" data-bind="event: {
																							keyup: function(d, event){ $root.imgManualCrop($data, event); },
																							input: function(d, event){ $root.imgManualCrop($data, event); },
																							blur: function(d, event){ $root.imgManualCrop($data, event); }} "/>

                                                                    </div>
                                                                </div>
                                                                <div data-bind="visible: window.mrbeam.browser.is_safari">
                                                                    <p>This feature is currently not available on iOS or
                                                                        Safari.</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="misfit_warning">
                                                    <i class="icon-warning-sign"
                                                       title="{{ _('exceeds working area') }}"></i>&nbsp;
                                                    <span>{{ _('Design exceeds the working area.') }}</span>
                                                    <a href="#" name="working_area_tab_make_it_fit"
                                                       data-bind="click: function(){ $root.fitSVG($data) } ">{{ _('Make it fit') }}</a>
                                                </div>
                                            </div>
                                        </div>
                                </script>
                                <script type="text/html" id="wa_template_quicktext">
                                    <div class="file_list_entry"
                                         data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
                                        <div class="title pull-left" data-bind="text: name, attr: {title: name}"></div>
                                        <div class="btn-group action-buttons pull-right">
                                            <div class="btn btn-mini"
                                                 data-bind="click: function() { $root.editQuickText($data); }"><i
                                                    class="icon-edit" title="{{ _('Edit') }}"></i></div>
                                            <div class="btn btn-mini"
                                                 data-bind="click: function() { $root.toggleTransformHandles($data); }">
                                                <i class="icon-move" title="{{ _('Transform') }}"></i></div>
                                            <div class="btn btn-mini remove-design-btn"
                                                 data-bind="click: function() { $root.removeSVG($data); }"><i
                                                    class="icon-remove" title="{{ _('Remove') }}"></i></div>
                                        </div>
                                        <div class="detail_information">
                                            <div class="local_transformation muted">
                                                <i class="icon-move" title="{{ _('translation') }}"></i>
                                                <input class="decent_input translation wide" type="text" value="0,0"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
                                                <i class="icon-repeat" title="{{ _('rotation') }}"></i>
                                                <input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
                                                </br>
                                                <i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
                                                <input class="decent_input horizontal" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
                                                <i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
                                                <input class="decent_input vertical" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
                                                <i class="icon-resize-full" title="{{ _('scale') }}"></i>
                                                <input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
                                                </br>
                                                <i class="icon-th" title="{{ _('multiply') }}"></i>
                                                <input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>
                                                <i class="icon-copy" title="{{ _('duplicate') }}"></i>
                                                <a href="#" data-bind="event: {
																			click: function(d, event){ $root.duplicateSVG($data, event); }
																		} ">{{ _('duplicate') }}</a>

															<div class="misfit_warning" >
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>&nbsp;
																<span>{{ _('Design exceeds the working area.') }}</span>
																<a href="#" name="working_area_tab_make_it_fit" data-bind="click: function(){ $root.fitSVG($data) } ">{{ _('Make it fit') }}</a>
															</div>
														</div>
													</div>
												</script>
												<script type="text/html" id="wa_template_quickshape">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
                                                        <div data-bind="visible: components_engrave" class="pull-left wa_used_color" style="background-image: url('/plugin/mrbeam/static/img/img_and_fills2.svg')" ></div>
                                                        <!-- ko foreach: {data: components, as: 'myComponent'} -->
														    <div data-bind="style: {'background-color': myComponent}" class="pull-left wa_used_color" ></div>
                                                        <!-- /ko -->
														<div class="title pull-left" data-bind="text: name, attr: {title: name}"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function() { $root.editQuickShape($data); }"><i class="icon-edit" title="{{ _('Edit') }}"></i></div>
															<div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
															<div class="btn btn-mini remove-design-btn" data-bind="click: function() { $root.removeSVG($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" >
															<div class="local_transformation muted">
																<i class="icon-move" title="{{ _('translation') }}"></i>
																<input class="decent_input translation wide" type="text" value="0,0" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
                                                <i class="icon-repeat" title="{{ _('rotation') }}"></i>
                                                <input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
                                                </br>
                                                <i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
                                                <input class="decent_input horizontal" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
                                                <i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
                                                <input class="decent_input vertical" type="text" value="? mm"
                                                       data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
                                                <i class="icon-resize-full" title="{{ _('scale') }}"></i>
                                                <input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
                                                </br>
                                                <i class="icon-th" title="{{ _('multiply') }}"></i>
                                                <input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>
                                                <i class="icon-copy" title="{{ _('duplicate') }}"></i>
                                                <a href="#" data-bind="event: {
																			click: function(d, event){ $root.duplicateSVG($data, event); }
																		} ">{{ _('duplicate') }}</a>

															<div class="misfit_warning" >
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>&nbsp;
																<span>{{ _('Design exceeds the working area.') }}</span>
																<a href="#" name="working_area_tab_make_it_fit" data-bind="click: function(){ $root.fitSVG($data) } ">{{ _('Make it fit') }}</a>
															</div>
														</div>
													</div>
												</script>

											</div>
										</div>
									</div>
								</div>
							</div>
                            </div>

							<!--  end sidebar  -->


							<div class="span8" style="position:relative">
								{% include 'homing_overlay.jinja2' %}
								<div id="zoomFactor" data-bind="text: zoom_factor_text"></div>
								<svg id="area_preview" class="workingarea" visibility="hidden"
									 data-bind="style: {
											width: workingAreaWidthPx()+'px',
											height: workingAreaHeightPx()+'px'
										},
										attr: {
											viewBox: zoomViewBox(),
											visibility: 'visible'
										},
										event: { wheel: wheel_zoom_wa, mousemove: mouse_drag_wa }
									 "
									 xmlns:mb="http://www.mr-beam.org/mbns">
								<defs>
									<filter id="grayscale_filter">
										<feColorMatrix in="SourceGraphic" type="saturate" values="0"/>
									</filter>
									<filter id="gcimage_preview">
										<feComponentTransfer>
											<feFuncR type="table" tableValues="0.9 1"></feFuncR>
											<feFuncG type="table" tableValues="0.3 1"></feFuncG>
											<feFuncB type="table" tableValues="0.1 1"></feFuncB>
										</feComponentTransfer>
									</filter>
									<filter id="designHighlight" filterUnits="objectBoundingBox" color-interpolation-filters="sRGB">
										<feDropShadow stdDeviation="5 5" in="SourceGraphic" dx="0" dy="0" flood-color="#e25303"
													  flood-opacity="1" result="dropShadow"/>
									</filter>
									<filter id="dehighlight" x="0" y="0">
										<!--<feGaussianBlur in="SourceGraphic" stdDeviation="2" />-->
										<feColorMatrix type="saturate" values="0.5"/>
									</filter>
                                    <filter id="scan_text_mode">
                                        <feGaussianBlur stdDeviation="0.1"></feGaussianBlur>
                                        <feComponentTransfer>
                                            <feFuncR tableValues="0 0 0 1 1 1 1" type="discrete"></feFuncR>
                                            <feFuncG tableValues="0 0 0 1 1 1 1" type="discrete"></feFuncG>
                                            <feFuncB tableValues="0 0 0 1 1 1 1" type="discrete"></feFuncB>
                                        </feComponentTransfer>
                                    </filter>
								</defs>
                                    <g id="obj_height_scale"
                                       transform="scale(1)"
                                       data-bind="attr: { transform: zObjectImgTransform() }">
                                        <image id="beamcam_image_svg"
                                            xlink:href="" x="0" y="0"
                                            data-bind="attr: {
                                                    width: workingAreaWidthMM(),
                                                    height: workingAreaHeightMM(),
                                                    opacity: previewImgOpacity(),
                                                    'xlink:href': camera.timestampedImgUrl()
                                               }" />
                                    </g>
									<g id="scaleGroup" data-bind="attr: { transform: scaleMatrix() }">
										<g id="placedGcodes" data-bind="visible: true || (state.isPrinting() && !state.isPaused()), attr: { transform: 'matrix(1,0,0,-1,0,'+workingAreaHeightMM()+')' }"></g>
										<g id="gCodePreview" data-bind="visible: state.isPrinting() || state.isPaused()"></g>
										<rect id="coordGrid" x="0" y="0" width="0" height="0"
											  stroke="none" fill="none"></rect>
										<g id="userContent"></g>
									</g>
									<g id="crosshair" transform="matrix(1, 0, 0, 1, -20, -20)"
									   data-bind="attr: { transform: scaleMatrixCrosshair()}">
										<circle r="0.5" cy="0" cx="0" />
										<path d="M-15,0H-5M15,0H5M0,15V5M0,-15V-5" />
									</g>
									<g id="camera_markers" fill="#ffffff" stroke="#ff00ff" stroke-width="5">
                                        <circle id="markerNW" r="5" cx="7" cy="7">
                                            <title>{{ _('The system can not find the pink marker in the device in this corner of the workin area. Please make sure that it is visible for the camera. Try to close and reopen the lid.') }}</title>
                                        </circle>
										<circle id="markerNE" r="5" cx="-7" cy="7" data-bind="attr: {cx: workingAreaWidthMM()-7}" >
                                            <title>{{ _('The system can not find the pink marker in the device in this corner of the workin area. Please make sure that it is visible for the camera. Try to close and reopen the lid.') }}</title>
                                        </circle>
										<circle id="markerSW" r="5" cx="7" cy="-7" data-bind="attr: {cy: workingAreaHeightMM()-7}" >
                                            <title>{{ _('The system can not find the pink marker in the device in this corner of the workin area. Please make sure that it is visible for the camera. Try to close and reopen the lid.') }}</title>
                                        </circle>
										<circle id="markerSE" r="5" cx="-7" cy="-7" data-bind="attr: {cx: workingAreaWidthMM()-7, cy: workingAreaHeightMM()-7}" >
                                            <title>{{ _('The system can not find the pink marker in the device in this corner of the workin area. Please make sure that it is visible for the camera. Try to close and reopen the lid.') }}</title>
                                        </circle>
									</g>
{#									<rect id="scanArea" x="0" y="0" width="0" height="0" ></rect>#}
{#									<rect id="scanEventHandler" x="0" y="0" width="0" height="0" stroke="none" fill="none"#}
{#										  data-bind="event: {mousedown: scanStart, mousemove: scanUpdate, mouseup: scanEnd}"></rect>#}
{##}
								</svg>
							</div>
                            <div id="working_area_footer">
                                <div class="pull-right working_area_footer_text">Mr Beam Plugin: v{{ beamosVersionNumber }}</div>
                                <div class="pull-right working_area_footer_text">{{ _('Serial') }}: {{ serial }}</div>
                                <div class="pull-right working_area_footer_text">{{ _('Mr Beam Name') }}: {{ hostname }}</div>
                                <div class="pull-right working_area_footer_text">© 2020 Mr Beam Lasers GmbH</div>
                            </div>
						</div>
					</div>
				</div>

