				<div class="tab-pane active" id="workingarea">
					<div class="container-fluid">
						<div class="row-fluid">
							<div class="span4 accordion full-col" style="margin-bottom:0;">

								<div id="state_accordion">
									<div class="accordion-heading" id="mrb_state_header">
										<a class="accordion-toggle" href="#statusbox"><i class="icon-info-sign"></i> {{ _('State') }}:</a><span data-bind="text: state.stateString"></span>
									</div>
									<div id="statusbox">
										<div class="accordion-body collapse in" id="mrb_state_wrapper" data-bind="visible: !state.isErrorOrClosed() && loginState.isUser() && !state.isFlashing() ">
											<div class="accordion-inner">

												<div data-bind="visible:(!state.isLocked() && !state.isConnecting())">

													<!--
													{{ _('File') }}: <strong data-bind="text: filename"></strong>&nbsp;<strong data-bind="visible: sd">(SD)</strong><br>
													{{ _('Timelapse') }}: <strong data-bind="text: timelapseString"></strong><br>
													{{ _('Approx. Total Job Time') }}: <strong data-bind="text: state.estimatedPrintTimeString"></strong><br>
													-->
													<div data-bind="visible: state.isPrinting() || state.isPaused()">

														<div>
															<div id="job_printtime">Print Time: <strong data-bind="text: state.printTimeString"></strong></div>
														</div>
														<div class="progress progress-striped active">
															<div class="bar" id="job_progressBar" data-bind="style: { width: state.progressString() + '%' }">&nbsp;{{ _('Processed') }} :  <strong data-bind="text: state.byteString"></strong></div>
														</div>
														<div class="overrideSlider">
															<input id="intensity_override_slider" type="text" data-bind="sliderValue: state.intensityOverride">
															<span data-bind="text:state.intensityOverride()">100</span>% Intensity
														</div>
														<div class="overrideSlider">
															<input id="feedrate_override_slider" type="text" data-bind="sliderValue: state.feedrateOverride">
															<span data-bind="text:state.feedrateOverride()">100</span>% Feedrate
														</div>
	<!--													<div class="repeatGcode">
															<div class="btn-group">
																<button type="button" class="btn btn-default btn-number" data-bind="enable: state.numberOfPasses() > 1, click:state.decreasePasses">
																	<span class="icon-minus"></span>
																</button>
																<input type="text" class="input-mini text-right" value="1" min="1" max="10" data-bind="value:state.numberOfPasses()">
																<button type="button" class="btn btn-default btn-number" data-bind="click:state.increasePasses">
																	<span class="icon-plus"></span>
																</button>
															</div>
															<span>Passes</span>

														</div>-->

													</div>
													<!--                                {{ _('Print Time') }}: <strong data-bind="text: printTimeString"></strong><br>
																					{{ _('Print Time Left') }}: <strong data-bind="text: printTimeLeftString"></strong><br>-->


													<div class="row-fluid print-control btn-group" style="display: none;" data-bind="visible: loginState.isUser">
														<button class="btn btn-danger span4" data-bind="click: conversion.show_conversion_dialog, enable: state.isOperational() && state.isReady() && !state.isPrinting() && !state.isPaused() && loginState.isUser() && !workingArea.working_area_empty(), attr: {title: state.titlePrintButton}" id="job_print">
															<i class="icon-white icon-fire" data-bind="css: { 'wobble': state.isPrinting()}"></i> <span>{{ _('Laser') }}</span>
														</button>
														<button class="btn span4" id="job_pause" data-bind="click: state.pause, enable: state.isOperational() && (state.isPrinting() || state.isPaused()) && loginState.isUser(), css: {active: state.isPaused()}, attr: {title: state.titlePauseButton}"><i data-bind="css: {'icon-pause': !state.isPaused(), 'icon-play': state.isPaused()}"></i> <span data-bind="visible: !state.isPaused()">{{ _('Pause') }}</span><span data-bind="visible: state.isPaused()">{{ _('Resume') }}</span></button>
														<button class="btn span4" id="job_cancel" data-bind="click: state.cancel, enable: state.isOperational() && (state.isPrinting() || state.isPaused()) && loginState.isUser()" title="{{ _('Cancels the job') }}"><i class="icon-stop"></i> {{ _('Cancel') }}</button>
													</div>
												</div>
											</div>
										</div>

										<div id="mrb_control" class="accordion-inner" data-bind="visible: state.isReady() || state.isLocked() || state.isFlashing()">
											<div data-bind="visible: state.isFlashing() ">
												Firmware update in progress
												<div id="flashing_progress" class="progress progress-striped active" style="width: 100%;">
													<div class="bar" style="width: 100%;"></div>
												</div>
												<span class="icon-exclamation-sign"></span>
												Do not power off the Machine during the flashing process.
											</div>
											<div data-bind="visible: !state.isLocked() && !state.isFlashing() ">
											<div class="accordion-heading" id="mrb_state_header">
												<a href="#control_btns" class="dropdown" data-toggle="collapse" aria-expanded="false">
												<i class="icon-screenshot"></i> {{ _('Position') }}:
													<span class="caret"></span>
												</a>
												<input id="manual_position" class="decent_input" data-bind="attr:{placeholder: state.laserPos}" onsubmit="control.manualPosition"/>
											</div>
												<!--<i class="icon-edit"></i>-->

												<div class="clearfix"></div>
												<div class="collapse" id="control_btns">

													<div class="jog-panel" id="control_xyaxis">
														XY-Axes
														<div>
															<a id="control-yinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { workingArea.sendSaveJogCommand('y',1) }"><i class="icon-circle-arrow-up"></i></a>
														</div>
														<div>
															<a id="control-xdec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { workingArea.sendSaveJogCommand('x',-1) }"><i class="icon-circle-arrow-left"></i></a>
															<a id="control-xyhome" data-bind="enable: (state.isOperational() || state.isLocked()) && !state.isPrinting() && loginState.isUser(), click: function() { control.sendHomeCommand(['x', 'y']) }"><i class="icon-home"></i></a>
															<a id="control-xinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { workingArea.sendSaveJogCommand('x',1) }"><i class="icon-circle-arrow-right"></i></a>
														</div>
														<div>
															<a id="control-ydec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { workingArea.sendSaveJogCommand('y',-1) }"><i class="icon-circle-arrow-down"></i></a>
														</div>
													</div>

													<div class="jog-panel" id="control_zaxis">
														<div data-bind="visible: control.showZAxis">
															Z-Axis
															<div role="group" aria-label="z-axis control">
																<a id="control-zinc" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('z',1) }"><i class="icon-chevron-sign-up"></i></a>
																<a ic="control-zdec" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: function() { control.sendJogCommand('z',-1) }"><i class="icon-chevron-sign-down"></i></a>
															</div>
														</div>
	<!--													<div>
															<a id="set_coordinate_origin_btn" class="" data-bind="enable: state.isOperational() && !state.isPrinting() && loginState.isUser(), click: control.setCoordinateOrigin" title="set coordinate origin"><i class="icon-screenshot"></i></a>
														</div>-->
													</div>

													<div class="clearfix"></div>

													<div class="distance">
														Jog distance:
														<input class="decent_input" type="number" min="0.1" max="100" step="10" id="jogDistance"
															   data-bind="value: control.distance, valueUpdate: 'input'"
															   style="width:3.5em; display: inline; margin: 0; padding-right:0;"
														/> mm
													</div>
												</div>
											</div>
										</div>

										<div class="accordion-body in" id="mrb_connection_wrapper"
											 data-bind="visible: !state.isFlashing() && state.isErrorOrClosed() && loginState.isUser()">
											<div class="accordion-inner">
												<label for="connection_ports" data-bind="css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()">{{ _('Serial Port') }}</label>
												<select id="connection_ports" data-bind="options: connection.portOptions, optionsCaption: 'AUTO', value: connection.selectedPort, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"></select>
												<label for="connection_baudrates" data-bind="css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()">{{ _('Baudrate') }}</label>
												<select id="connection_baudrates" data-bind="options: connection.baudrateOptions, optionsCaption: 'AUTO', value: connection.selectedBaudrate, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"></select>
	<!--											<label class="checkbox">
													<input type="checkbox" id="connection_save" data-bind="checked: saveSettings, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"> {{ _('Save connection settings') }}
												</label>-->
												<label class="checkbox">
													<input type="checkbox" id="connection_autoconnect" data-bind="checked: settings.serial_autoconnect, css: {disabled: !state.isErrorOrClosed()}, enable: state.isErrorOrClosed() && loginState.isUser()"> {{ _('Auto-connect on server startup') }}
												</label>
												<button class="btn btn-block" id="printer_connect" data-bind="click: connection.connect, text: connection.buttonText(), enable: loginState.isUser()">{{ _('Connect') }}</button>
											</div>
										</div>
									</div>
								</div>

								<div data-bind="visible: loginState.isUser" id="connection_accordion"></div>



                                <div class="accordion-group" id="working_area_files">
									<div class="accordion-heading">
										<a class="accordion-toggle" href="#wa_filelist"><i class="icon-list"></i> {{ _('Designs') }}</a>
										<a class="accordion-toggle pull-right" data-bind="visible: !working_area_empty(), click: clear" style="margin-right: 1em;" ><i class="icon-remove-sign"></i> {{ _('Clear all') }}</a>
									</div>
									<div class="accordion-body">
										<div class="accordion-inner">
											<div class="row-fluid btn-group">
												<div class="btn span4" data-bind="click: function(){$('#designlib_tab_btn').tab('show');}"><i class="icon-file"></i> {{ _('File') }} </div>
												<div class="btn span4" data-bind="click: newQuickText"><i class="icon-font"></i> {{ _('Text') }} </div>
												<div class="btn span4" data-bind="visible:files.hasCamera(), css: {disabled: !$root.loginState.isUser()}, click: files.takePhoto" >
													<i class="icon-camera icon-white"></i>
													<span>{{ _('Photo') }}</span>
												</div>
											</div>
                                        </div>

										<div class="collapse in" id="wa_filelist">
											<div class="accordion-inner">
												<div class="scrollable" data-bind="foreach: placedDesigns">
													<div class="entry" data-bind="attr: { id: $data.id }, template: { name: $root.templateFor($data), data: $data }"></div>
												</div>

												<script type="text/html" id="wa_template_machinecode">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
														<div class="title pull-left" data-bind="text: name"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function(){ $root.removeGcode($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" ></div>
													</div>
												</script>

												<script type="text/html" id="wa_template_model_svg">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
														<div class="title pull-left" data-bind="text: name"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
															<div class="btn btn-mini" data-bind="click: function() { $root.removeSVG($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" >
															<div class="local_transformation muted">
																<i class="icon-move" title="{{ _('translation') }}"></i>
																<input class="decent_input translation wide" type="text" value="0,0" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
																<i class="icon-repeat" title="{{ _('rotation') }}"></i>
																<input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
																</br>
																<i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
																<input class="decent_input horizontal" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
																<i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
																<input class="decent_input vertical" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
																<i class="icon-resize-full" title="{{ _('scale') }}"></i>
																<input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
																</br>
																<i class="icon-th" title="{{ _('multiply') }}"></i>
																<input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>

																<i class="icon-copy" title="{{ _('duplicate') }}"></i>
																<a href="#" data-bind="event: {
																			click: function(d, event){ $root.duplicateSVG($data, event); }
																		} ">duplicate</a>
															</div>
															<div class="misfit_warning" >
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>&nbsp;
																<span>Design exceeds the working area.</span>
																<a href="#" data-bind="click: function(){ $root.fitSVG($data) } ">Make it fit</a>
															</div>
														</div>
													</div>
												</script>

												<script type="text/html" id="wa_template_model_img">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
														<div class="title pull-left" data-bind="text: name"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
															<div class="btn btn-mini" data-bind="click: function() { $root.removeIMG($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" >
															<div class="local_transformation muted">
																<i class="icon-move" title="{{ _('translation') }}"></i>
																<input class="decent_input translation wide" type="text" value="0,0" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
																<i class="icon-repeat" title="{{ _('rotation') }}"></i>
																<input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
																</br>
																<i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
																<input class="decent_input horizontal" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
																<i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
																<input class="decent_input vertical" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
																<i class="icon-resize-full" title="{{ _('scale') }}"></i>
																<input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
																</br>
																<i class="icon-th" title="{{ _('multiply') }}"></i>
																<input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>															</div>

															<div class="misfit_warning" >
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>&nbsp;
																<span>Design exceeds the working area.</span>
																<a href="#" data-bind="click: function(){ $root.fitSVG($data) } ">Make it fit</a>
															</div>
														</div>
													</div>
												</script>

												<script type="text/html" id="wa_template_quicktext">
													<div class="file_list_entry" data-bind="event: {mouseover: $root.highlightDesign, mouseout: $root.removeHighlight }">
														<div class="title pull-left" data-bind="text: name"></div>
														<div class="btn-group action-buttons pull-right">
															<div class="btn btn-mini" data-bind="click: function() { $root.editQuickText($data); }"><i class="icon-edit" title="{{ _('Edit') }}"></i></div>
															<div class="btn btn-mini" data-bind="click: function() { $root.toggleTransformHandles($data); }"><i class="icon-move" title="{{ _('Transform') }}"></i></div>
															<div class="btn btn-mini" data-bind="click: function() { $root.removeSVG($data); }"><i class="icon-remove" title="{{ _('Remove') }}"></i></div>
														</div>
														<div class="detail_information" >
															<div class="local_transformation muted">
																<i class="icon-move" title="{{ _('translation') }}"></i>
																<input class="decent_input translation wide" type="text" value="0,0" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualTranslate($data, event); },
																			blur: function(d, event){ $root.svgManualTranslate($data, event); }} "/>
																<i class="icon-repeat" title="{{ _('rotation') }}"></i>
																<input class="decent_input rotation" type="text" value="0°" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualRotate($data, event); },
																			blur: function(d, event){ $root.svgManualRotate($data, event); }} "/>
																</br>
																<i class="icon-resize-horizontal" title="{{ _('horizontal') }}"></i>
																<input class="decent_input horizontal" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualWidth($data, event); },
																			blur: function(d, event){ $root.svgManualWidth($data, event); }} "/>
																<i class="icon-resize-vertical" title="{{ _('vertical') }}"></i>
																<input class="decent_input vertical" type="text" value="? mm" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualHeight($data, event); },
																			blur: function(d, event){ $root.svgManualHeight($data, event); }} "/>
																<i class="icon-resize-full" title="{{ _('scale') }}"></i>
																<input class="decent_input scale" type="text" value="100%" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualScale($data, event); },
																			blur: function(d, event){ $root.svgManualScale($data, event); }} "/>
																</br>
																<i class="icon-th" title="{{ _('multiply') }}"></i>
																<input class="decent_input multiply" type="text" value="1×1" data-bind="event: {
																			keyup: function(d, event){ $root.svgManualMultiply($data, event); },
																			blur: function(d, event){ $root.svgManualMultiply($data, event); }} "/>															</div>

															<div class="misfit_warning" >
																<i class="icon-warning-sign" title="{{ _('exceeds working area') }}"></i>&nbsp;
																<span>Design exceeds the working area.</span>
																<a href="#" data-bind="click: function(){ $root.fitSVG($data) } ">Make it fit</a>
															</div>
														</div>
													</div>
												</script>

											</div>
										</div>
									</div>
								</div>
							</div>

							<!--  end sidebar  -->


							<div class="span8" style="position:relative">
								{% include 'homing_overlay.jinja2' %}
								<div id="zoomFactor" data-bind="text: zoom_factor_text"></div>
								<svg id="area_preview" class="workingarea" visibility="hidden"
									 data-bind="style: {
											width: workingAreaWidthPx()+'px',
											height: workingAreaHeightPx()+'px'
										},
										attr: {
											viewBox: zoomViewBox(),
											visibility: 'visible'
										},
										event: { mousewheel: wheel_zoom, mousemove: mouse_drag }
									 "
									 xmlns:mb="http://www.mr-beam.org/mbns">
								<defs>
									<filter id="grayscale_filter">
										<feColorMatrix in="SourceGraphic" type="saturate" values="0"/>
									</filter>
									<filter id="gcimage_preview">
										<feComponentTransfer>
											<feFuncR type="table" tableValues="1"></feFuncR>
											<feFuncG type="table" tableValues="0.2 1"></feFuncG>
											<feFuncB type="table" tableValues="0.2 1"></feFuncB>
										</feComponentTransfer>
									</filter>
									<filter id="dehighlight" x="0" y="0">
										<!--<feGaussianBlur in="SourceGraphic" stdDeviation="2" />-->
										<feColorMatrix type="saturate" values="0.5"/>
									</filter>
								</defs>
								<image id="beamcam_image_svg"
									xlink:href="/downloads/files/local/cam/beam-cam.jpg" x="0" y="0" height="100%" width="100%"
									data-bind="attr: {
											width: workingAreaWidthMM(),
											height: workingAreaHeightMM()
										}" />
									<g id="scaleGroup" data-bind="attr: { transform: scaleMatrix() }">
										<g id="placedGcodes" data-bind="visible: true || (state.isPrinting() && !state.isPaused()), attr: { transform: 'matrix(1,0,0,-1,0,'+workingAreaHeightMM()+')' }"></g>
										<g id="gCodePreview" data-bind="visible: state.isPrinting() || state.isPaused()"></g>
										<rect id="coordGrid" x="0" y="0" width="0" height="0"
											  stroke="none" fill="none"></rect>
										<rect id="highlightMarker" x="-1" y="-1" width="0" height="0" class="highlightMarker" fill="none"></rect>
										<g id="userContent"></g>
									</g>
									<g id="crosshair" transform="matrix(1, 0, 0, 1, -20, -20)"
									   data-bind="attr: { transform: scaleMatrixCrosshair()}">
										<circle r="0.5" cy="0" cx="0" />
										<path d="M -15,0 H -5" />
										<path d="M 15,0 H 5" />
										<path d="M 0,15 V 5" />
										<path d="M 0,-15 V -5" />
									</g>
								</svg>

							</div>
						</div>
					</div>
				</div>

