
<div data-bind='visible: !startupComplete()' style="color: #e25303; font-size: 1.5em; position: absolute; top: 40%; left: 50%">
    <div style="position: relative; left: -50%;">
        <i class="icon icon-spinner icon-spin" style="font-weight: bold;"></i>
        <span style="font-weight: 200; padding-left: 12px;"> Mr Beam</span> <span style="font-weight: 400;">Calibration Tool</span>
    </div>
</div>
<div style="position:relative; display:none;" data-bind='visible: startupComplete'>

		<!-- Calibration Selector -->
    <h4><span style="font-weight: 200; padding-left: 12px;">Mr Beam</span> <span style="font-weight: 400;">Calibration Tool</span></h4>
		<ul id="camera-calibration-tabs" class="nav nav-tabs"> 
			<li class="active"><a href="#tab_camera_alignment" data-toggle="tab" id="camalignment_tab_btn" >{{ _('Camera Alignment') }}</a></li>
			<li><a href="#tab_lens_calibration" data-toggle="tab" id="lenscal_tab_btn" data-bind="click: startLensCalibration">{{ _('Lens Calibration') }}
					<i class="icon icon-ok" data-bind="visible: lensCalibrationComplete()"></i>
					<i class="icon icon-remove" data-bind="visible: !lensCalibrationComplete()"></i>
				</a></li>
			<li><a href="#tab_corner_calibration" data-toggle="tab" id="cornercal_tab_btn">{{ _('Corner Calibration') }}
				<i class="icon icon-ok" data-bind="visible: cornerCalibrationComplete() || availablePic()['cropped']"></i>
				<!-- <i class="icon icon-remove" data-bind="visible: !cornerCalibrationComplete()"></i> -->
			</a></li>
			<li><a href="#tab_calibration_qa" data-toggle="tab" id="qacal_tab_btn">{{ _('QA') }}</a></li>
			<li><a href="#tab_done_print_labels" data-toggle="tab" id="done_tab_btn">{{ _('Labels') }}</a></li>
		</ul>
	
		<div class="tabbable">
			<div class="tab-content camera_calibration_tabs">
				
				<div class="tab-pane active" id="tab_camera_alignment">
					<h3>{{ _('Camera alignment') }}</h3>
					<div class="qa_images">
						<div>
							<div class="qa_img_wrapper">
								<image id="qa_cameraalignment_image" style="min-height: 359px" data-bind="attr: {src: availablePicUrl()['raw']}"/>
							</div>
							<a href="#" class="btn btn-link" data-bind="click:loadUndistortedPicture">
								<i class="icon icon-refresh"></i>
								<span style="xxfont-size:1.5rem;">{{ _('Refresh Picture') }}</span> 
							</a>
						</div>
						<div class="qa_text">
							<ul>
								<li class="example good_example"><img src="/plugin/mrbeam/static/img/cam_calibration/camalignment_ok.jpg" /></li>
								<li class="example bad_example"><img src="/plugin/mrbeam/static/img/cam_calibration/camalignment_marker_cropped.jpg" /></li>
{#								<li class="example bad_example"><img src="/plugin/mrbeam/static/img/cam_calibration/camalignment_marker_covered.jpg" /></li>#}
							</ul>
						</div>
					</div>
					
					<div class="qa_list_and_next">
					    <h4>Checklist</h4>
						<ul>
							<li>{{ _('4 markers are visible.') }}</li>
							<li>{{ _('Full working area visible.') }}</li>
							<li>{{ _('Some space below the workinng area visible.') }}</li>
							<li>{{ _('Laserhead is not covering a marker.') }}</li>
						</ul>
						<a href="#" onclick="$('#lenscal_tab_btn').click()" data-bind="visible: qa_cameraalignment_image_loaded, click: startLensCalibration" class="btn btn-success continue_btn">
							<span style="font-size:1.5rem;">{{ _('Yes') }}</span>
							<i class="icon icon-2x icon-fixed-width icon-arrow-right"></i>
						</a>
					</div>
				</div>
				
				
				
				<div class="tab-pane" id="tab_lens_calibration">
					
					<div class="marker_selection_desc calibration_help" data-bind="visible:!lensCalibrationActive()">
{#					   <div>#}
{#						   {{_('Have a calibration board ready:') }}<br/>#}
{#						   <a href='/plugin/mrbeam/static/docs/calibration_chessboard_pattern.pdf' target='_blank'>{{_('Download this PDF and print it in original size.') }}</a><br/>#}
{#						   {{_('When started, you will have to take at least 10 pictures of the calibration board with the camera.')}}#}
{#						   {{_('We will tell you if we missed one of the calibration boards here.') }}<br/>#}
{#						   {{_('You can take more pictures and run the calibration again by pressing the green "Run lens Calibration" button.') }}<br/>#}
{#						   {{_('When you are done, you can exit this calibration screen using the "Stop Lens Calibration" button.') }}<br/>#}
{#					   </div>#}
					   <div style="margin-top:1em;">
						   <button class="btn btn-default" data-bind="click: startLensCalibration">
							   {{ _('Start Lens Calibration') }}</button>
					   </div>
				   </div>	
					
					<!-- Lens calibration -->
					<div id="lensCalibrationPhases" data-bind="visible: lensCalibrationActive()">
						
						<div id="lensCalibrationPictureTaking">
							<div style='position:relative;'>
								<svg id="heatmap_container" version="1.1" enable-background="new 0 0 211 141"
								   viewBox="0 0 3100 2500" height="100%" width="100%" y="0px" x="0px">
								  <radialGradient gradientUnits="userSpaceOnUse" gradientTransform="matrix(1,0,0,0.9565,0,-7.4897)"
									 r="91.003799" cy="81.540604" cx="105.5" id="SVGID_1_">
									<stop id="stop2" style="stop-color:#FFFFFF" offset="0.291" />
									<stop id="stop4" style="stop-color:#E6E6E6" offset="1" />
								  </radialGradient>
								  <rect height="2499.3801" width="3099.2346" x="0"
									 style="fill:#f2f2f2;stroke-width:16.13587761" y="0.61995518" />
								  <g transform="translate(-388,-43.574219)"
									 id="g879">
									<path id="polygon9"
									   d="m 585.47308,330.57446 51.08796,52.78368 0.28863,1760.33376 -53.41506,54.1367 27.61853,30.7213 53.77585,-50.4024 H 3166.7861 l 53.7758,50.4385 27.6366,-30.9378 -53.397,-53.9743 0.3427,-1760.17145 51.1601,-52.5672 -26.5542,-27.11342 -51.7554,52.33269 H 664.26976 l -52.08013,-52.31465 z"
									   style="fill:#ffffff;stroke:#010202;stroke-width:18.03953362;stroke-linejoin:round;stroke-miterlimit:10" />
									<path id="line39"
									   d="m 966.01703,2022.3941 52.63937,-52.6574 m 1731.7953,-1407.08362 52.6572,-52.63939 m 0,1512.38041 -52.6572,-52.6574 M 1018.6564,562.65308 966.01703,510.01369 m 52.63937,52.63939 H 2750.4517 V 1969.7367 H 1018.6564 Z M 874.9174,355.19844 V 2177.1914 M 2949.4638,355.19844 V 2177.1914 m 182.3977,-96.1147 a 44.413331,44.413331 0 0 1 -44.4133,44.4134 44.413331,44.413331 0 0 1 -44.4133,-44.4134 44.413331,44.413331 0 0 1 44.4133,-44.4133 44.413331,44.413331 0 0 1 44.4133,44.4133 z M 664.26976,353.39447 m 0,0 m 2530.53194,1790.27943 -28.0156,34.4736 m 1.2086,-1821.99298 27.1495,27.34795 M 636.84969,2143.6919 l 27.9793,34.4556 m -0.55923,-1821.99298 -27.70878,27.2036"
									   style="fill:none;stroke:#000000;stroke-width:13.52965069;stroke-linecap:round;stroke-miterlimit:10" />
									<rect id="rect976"
									   style="opacity:1;vector-effect:none;fill:#b3b3b3;fill-opacity:1;stroke:none;stroke-width:12.61347008;stroke-linecap:round;stroke-linejoin:bevel;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:normal"
									   width="1731.795" height="1407.0836" x="1018.6564" y="562.65308" />
								  </g>
								  <g id="segment_group" transform="translate(340, 250),scale(1.1, 1.2)"></g>
								  <path d="M2740,2040H3500" stroke="#0266cc" stroke-width="15px"></path>
								  <text id='lensCalibrationCoverageText' x="350" y="2360" style="font-size: 150px;"></text>
								</svg>


								<button id="lens_calibration_take_pic" class="btn btn-primary" data-bind="click: saveRawPic, enable: !cameraBusy()">
									<i class="icon icon-camera icon-2x"></i>
								</button>



								<button id="lens_calibration_toggle_qa_btn" class="btn pull-right" 
										data-bind="click: lensCalibrationToggleQA,
												   css: {'btn-success': lensCalibrationNpzFileTs, 'btn-default': !lensCalibrationNpzFileTs()},
												   visible: rawPicSelection().length >= 9,
												   enable: lensCalibrationNpzFileTs() && hasMinBoardsFound()">
									<span style="font-size:1.5rem;">{{ _('Check result') }}</span> 
									<i class="icon icon-2x icon-fixed-width icon-arrow-right" data-bind="visible: lensCalibrationNpzFileTs"></i>
								</button>
							</div>

							<ul id="lens_correction_image_list" data-bind="visible: lensCalibrationActive(), foreach: { data: rawPicSelection, as: 'pic' }">
								<li class="lens_correction_image_thumb" 
									data-bind="	style: { backgroundImage: pic.state !== 'camera_processing' ? 'url('+pic.url+'?'+pic.state+')' : '' },
												event:{ mouseover: $root.heatmap_highlight, mouseout: $root.heatmap_dehighlight }" 
									onclick="this.classList.remove('zoom')"> <!-- toggle class messes with rm btn -->
									<div class="btn-group">
										<button class="btn btn-default" onclick="this.parentElement.parentElement.classList.add('zoom'); event.stopPropagation();">
											<i class="icon icon-search"></i>
										</button>
										<button class="btn btn-danger" data-bind="visible: (pic.path !== null), click: $parent.delRawPic">
											<i  class="icon icon-trash"></i>
										</button>
									</div>
									<span class="chessboard_cal_duration pull-right" data-bind="visible: pic.tm_end !== null">
										<i class="icon icon-time"></i> <span data-bind="text: pic.processing_duration"></span><br />
										<!-- <i data-bind="css: {'icon-star': pic.score >= 1, 'icon-star-empty': pic.score < 1}" class="icon"></i>
											 <i data-bind="css: {'icon-star': pic.score >= 2, 'icon-star-empty': pic.score < 2}" class="icon"></i>
											 <i data-bind="css: {'icon-star': pic.score >= 3, 'icon-star-empty': pic.score < 3}" class="icon"></i>
											 <i data-bind="css: {'icon-star': pic.score >= 4, 'icon-star-empty': pic.score < 4}" class="icon"></i>
											 <i data-bind="css: {'icon-star': pic.score >= 5, 'icon-star-empty': pic.score < 5}" class="icon"></i> -->
									</span>

									<i class="status_icon icon icon-save" data-bind="visible: pic.state === 'camera_processing' || pic.state === 'pending'  || pic.state === 'queued' "></i>
									<i class="status_icon icon icon-spinner icon-spin" data-bind="visible: pic.state === 'processing'"></i>
									<i class="status_icon icon icon-ok" style="color: #00ff00;" data-bind="visible: pic.state === 'success'"></i>
									<i class="status_icon icon icon-remove" style="color: #ff0000;" data-bind="visible: pic.state === 'fail'"></i>
									<i class="status_icon icon icon-camera" data-bind="visible: pic.state === 'missing'"></i>
								</li>
							</ul>
						</div>
							
						<div id="lensCalibrationQA">
							<div data-bind="visible: lensCalibrationNpzFileTs" class="qa_images">
								<div class="qa_img_wrapper">
									<image data-bind="attr: {src: availablePicUrl()['lens_corrected']}" />
									<div id="qa_undistorted_guides"></div>
								</div>
								<ul>
									<li class="example good_example"><img src="/plugin/mrbeam/static/img/cam_calibration/undistorted_ok.jpg" /></li>
									<li class="example bad_example"><img src="/plugin/mrbeam/static/img/cam_calibration/undistorted_bad1.jpg" /></li>
								</ul>
							</div>
							<div data-bind="text: lensCalibrationNpzFileVerboseDate"></div>
							
							<div class="qa_list_and_next">
							    <h4>Checklist</h4>
								<ul>
									<li>{{ _('4 markers are within the green rectangle') }}</li>
									<li>{{ _('No black pixels are in the green rectangle') }}</li>
								</ul>
								<div class="continue_btn btn-group">
									<a href="#" onclick="$('#lenscal_tab_btn').click()" class="btn continue_btn"
										data-bind="click: lensCalibrationToggleQA">
										<i class="icon icon-2x icon-fixed-width icon-arrow-left"></i>
{#										<span style="font-size:1.5rem;">{{ _('No') }}</span>#}
									</a>
									<a href="#" class="btn btn-success continue_btn"
										data-bind="xclick: stopLensCalibration,
													click: function(){ $('#cornercal_tab_btn').click() },
													enable: lensCalibrationNpzFileTs && hasMinBoardsFound()">
										<span style="font-size:1.5rem;">{{ _('Yes') }}</span>
										<i class="icon icon-2x icon-fixed-width icon-arrow-right"></i>
									</a>
								</div>
							</div>
						</div>
					</div>
					
				</div>

	<!--====================================================================================================================-->			
				
				<div class="tab-pane" id="tab_corner_calibration">

					<!-- Corner calibration -->
					<svg id="calibration_svg" style="max-width: 60vh; border:1px solid lightgray" width="100%" height="100%" viewBox="0 0 512 384" data-bind="attr: {viewBox: calSvgViewBox()}">
						<defs>
							<symbol id="cross">
								<path data-bind="attr: {d: svgCross()}" fill="none" />
							</symbol>
						</defs>
						<g id="obj_height_scale">
							<image style="cursor:crosshair;" 
							   onerror="console.warn(event, this, 'reloading '+this.href); var src=this.href; this.href=''; setTimeout(function(){ this.href=src; }, 100); return false; " 
							   data-bind="attr: {href: calImgUrl(), width:calImgWidth(), height:calImgHeight() }, click: userClick" />
						</g>
						<g id="corners" class="calibration_click_indicator" data-bind="attr: { visibility: correctedMarkersVisibility() }">
							<use id="click_NW" href="#cross" x="-100" y="-100" />
							<use id="click_NE" href="#cross" x="-100" y="-100" />
							<use id="click_SE" href="#cross" x="-100" y="-100" />
							<use id="click_SW" href="#cross" x="-100" y="-100" />
						</g>
						<g id="cropped_view_corners" class="calibration_click_indicator"
						   transform="scale(1)"
						   data-bind="attr: { transform: zMarkersTransform(), visibility: croppedMarkersVisibility() }">
						   <use href="#cross" stroke="blue" data-bind="attr: { x: -crossSize(),                         y: -crossSize() }" />
						   <use href="#cross" stroke="blue" data-bind="attr: { x: calImgWidth()-crossSize(), y: -crossSize() }" />
						   <use href="#cross" stroke="blue" data-bind="attr: { x: -crossSize(),                         y: calImgHeight()-crossSize() }" />
						   <use href="#cross" stroke="blue" data-bind="attr: { x: calImgWidth()-crossSize(), y: calImgHeight()-crossSize() }" />
						</g>
					</svg>
					<div>
						<div style="margin-bottom:1em;">
							<a class="accordion-toggle" data-bind="click:loadUndistortedPicture"><i class="icon-repeat"></i> {{ _('refresh') }}</a>
							<div class="marker_selection_desc calibration_waiting_for_picture">
								<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['NW'] }"><i class="icon-ok"></i> NW</div>
								<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['SW'] }"><i class="icon-ok"></i> SW</div>
								<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['SE'] }"><i class="icon-ok"></i> SE</div>
								<div class="marker_found_indicator" data-bind="css: { active: camera.markersFound()['NE'] }"><i class="icon-ok"></i> NE</div>
								<div class="marker_found_indicator" data-bind="visible: !cal_img_ready()"><i class="icon-spinner icon-spin"></i> {{ _('detecting') }}</div>
							</div>
							<a class="muted" data-bind="attr: { href: calImgUrl() }"> {{ _('Download this image') }}</a>
						</div>
					</div>
					
					<div data-bind="visible: !cornerCalibrationActive()" width="100%">
						
{#						<div class="marker_selection_desc calibration_help"#}
{#							 data-bind="visible: cal_img_ready() && availablePic()['lens_corrected']">#}
{##}
{#							<div>{{_('Click on the arrow head of the marker in the magnified picture.') }}<br/>#}
{#								{{_('Continue with the other markers as the picture changes.') }}<br/>#}
{#								{{_('Once all arrowheads are marked the calibration is finished.')}}</div>#}
{#							<div data-bind="visible: isInitialCalibration()">#}
{#								{{_('No calibration arrows visible?')}}#}
{#								<a href="#reengrave_markers" class="dropdown" data-toggle="collapse" aria-expanded="false">#}
{#									{{_('Engrave again')}}#}
{#								</a>#}
{#								<span class="caret" style="vertical-align: middle"></span>#}
{#								<br/>#}
{#								<div class="collapse" id="reengrave_markers" style="display:inline-block;">#}
{#									<div>#}
{#										Intensity: <input id="initialcalibration_intensity" type="number" min="0" max="100" step="1" class="decent_input" value="50" />%,&nbsp;#}
{#										Feedrate: <input id="initialcalibration_feedrate" type="number" min="100" max="3000" step="1" class="decent_input" value="800" />mm/min&nbsp;#}
{#										<span data-bind="visible: !interlocks_closed()" style="color: red; display: inline-block; padding: 0.8em"><i class="icon icon-warning-sign"></i> {{ _('Close the lid') }}</span>#}
{#										<button class="btn btn-danger" data-bind="click: engrave_markers_without_gui, visible: isInitialCalibration() && interlocks_closed()"><i class="icon-fire"></i>&nbsp;{{ _('Engrave Markers') }}</button>#}
{#									</div>#}
{#								</div>#}
{#							</div>#}
{#						</div>#}
                        <div style="margin-top:1em;">
                            <button class="btn btn-default" data-bind="visible: !availablePic()['cropped'], click: startCornerCalibration">{{ _('Start Corner Calibration') }}</button>
                        </div>
						<div data-bind="visible: cornerCalibrationComplete() && !availablePic()['cropped']" style="color: rgb(226, 83, 3); font-size: 1.5em; left: 50%;">
							<i class="icon icon-spinner icon-spin" style="font-weight: bold"></i>
							<span>&nbsp; Waiting for a new picture...</span>
						</div>
						<div class="qa_list_and_next" data-bind="visible: availablePic()['cropped']">
                            <h4>Checklist:</h4>
							<ul>
								<li>{{ _('The 4 arrows are aligned with the blue crosses') }}</li>
							</ul>
							<div class="continue_btn btn-group">
								<!--  onclick="startCornerCalibration" -->
								<a href="#" class="btn continue_btn"
									data-bind="click: startCornerCalibration">
									<i class="icon icon-2x icon-fixed-width icon-refresh"></i>
{#									{{ _('Restart Corner Calibration') }}#}
								</a>
								<a href="#" class="btn btn-success continue_btn"
									data-bind="click: function(){ $('#qacal_tab_btn').click() }">
                                    <span style="font-size:1.5em;">{{ _('Yes') }}</span><i class="icon icon-2x icon-fixed-width icon-arrow-right"></i>
								</a>
							</div>

							<div id="corner_calibration_debug" data-bind="visible: isInitialCalibration() ">
								<div>
									<img id="debug_NW_img" class="marker_debug_image" data-bind="attr: {src: dbNWImgUrl()}"/>
									<img id="debug_NE_img" class="marker_debug_image" data-bind="attr: {src: dbNEImgUrl()}"/>
								</div>
								<div>
									<img id="debug_SW_img" class="marker_debug_image" data-bind="attr: {src: dbSWImgUrl()}"/>
									<img id="debug_SE_img" class="marker_debug_image" data-bind="attr: {src: dbSEImgUrl()}"/>
								</div>
							</div>
						</div>
					</div>
					<div data-bind="visible: cornerCalibrationActive()">

						<div class="marker_selection_desc calibration_summary">
							<div data-bind="css: {complete: cornerCalibrationComplete()}">
								<div id="calibration_picture_control" style="position: fixed;right: 0;top: 30vh;padding: 1em;border: 1px solid gray;" data-bind="visible: isInitialCalibration()">
									Picture:<br />
									<input type="radio" name="picture_type" value="raw"
										   data-bind="checked: picType, attr: { disabled: !availablePic()['raw'] }" /> Raw<br />
									<input type="radio" name="picture_type" value="lens_corrected"
										   data-bind="checked: picType, attr: { disabled: !availablePic()['lens_corrected'] }" /> Lens corrected<br />
									<input type="radio" name="picture_type" value="cropped"
										   data-bind="checked: picType, attr: { disabled: !availablePic()['cropped'] }" /> Cropped<br />
									<br/>
									Zoom: <span data-bind="text: calSvgScale" ></span> <br/>
									<button class="btn-default" data-bind="click: smaller">-</button><button class="btn-default" data-bind="click: larger">+</button>
									<br />
									Move:
									<div>
										<div class="btn-group">
											<button class="btn-default" data-bind="click: move(-50,-50)">&#8598;</button>
											<button class="btn-default" data-bind="click: move(0,-50)">&#8593;</button>
											<button class="btn-default" data-bind="click: move(50,-50)">&#8599;</button>
										</div><br/>
										<div class="btn-group">
											<button class="btn-default" data-bind="click: move(-50,0)">&#8592;</button>
											<button class="btn-default" data-bind="click: resetMove">*</button>
											<button class="btn-default" data-bind="click: move(50,0)">&#8594;</button>
										</div><br/>
										<div class="btn-group">
											<button class="btn-default" data-bind="click: move(-50,50)">&#8601;</button>
											<button class="btn-default" data-bind="click: move(0,50)">&#8595;</button>
											<button class="btn-default" data-bind="click: move(50,50)">&#8600;</button>
										</div>

									</div>
								</div>

								<div data-bind="visible: cal_img_ready() && cornerCalibrationActive()">
									<div id="NW" class="cal-row"><div class="cal-arrow NW"></div> North West: <span data-bind="text: __format_point(currentResults()['NW'])"></span></div>
									<div id="SW" class="cal-row"><div class="cal-arrow SW"></div> South West: <span data-bind="text: __format_point(currentResults()['SW'])"></span></div>
									<div id="SE" class="cal-row"><div class="cal-arrow SE"></div> South East: <span data-bind="text: __format_point(currentResults()['SE'])"></span></div>
									<div id="NE" class="cal-row"><div class="cal-arrow NE"></div> North East: <span data-bind="text: __format_point(currentResults()['NE'])"></span></div>
								</div>
							</div>
							<div style="margin-top:1em;">
								<button class="btn btn-default" data-bind="click: previousMarker, visible: cornerCalibrationActive()">{{ _('Previous') }}</button>
								<button class="btn btn-default" data-bind="click: nextMarker, visible: cornerCalibrationActive()">{{ _('Next') }}</button>
								<button class="btn btn-warning" data-bind="click: abortCalibration, visible: cornerCalibrationActive()"><i class="icon-fixed-width icon-ban-circle"></i> {{ _('Cancel') }}</button>
								<button class="btn btn-success" data-bind="click: saveCornerCalibrationData, visible: cornerCalibrationComplete() && cornerCalibrationActive()">{{ _('Save Calibration') }}</button>
							</div>
							<!-- <h4>Checklist</h4>
								 <div class="qa_list_and_next">
								 <ul style="margin:0;">
								 <li>{{ _('Green rectangle is on the engraved rectangle') }}</li>
								 <li>{{ _('engraved rectangle egdes are straight and parallel to the green rectangle edges') }}</li>
								 </ul>
								 <div class="continue_btn btn-group">
								 <button class="btn btn-warning" data-bind="click: abortCalibration, visible: cornerCalibrationActive()"><i class="icon-fixed-width icon-ban-circle"></i> {{ _('Cancel') }}</button>
								 <button class="btn btn-success" data-bind="click: saveCornerCalibrationData, visible: cornerCalibrationComplete() && cornerCalibrationActive()">{{ _('Save Calibration') }}</button>

								 </div>
								 </div> -->
						</div>
						
					</div>
					
				</div>
	
				<div class="tab-pane" id="tab_calibration_qa">
					<div class="qa_images">
						<div>
							<div class="qa_img_wrapper">
								<image data-bind="attr: {src: availablePicUrl()['cropped']}" />
								<div id="qa_cropped_guides"></div>
							</div>
						</div>
					</div>
					<div class="qa_list_and_next">
					    <h4>Checklist</h4>
						<ul>
							<li>{{ _('Green rectangle is on the engraved rectangle') }}</li>
							<li>{{ _('engraved rectangle egdes are straight and parallel to the green rectangle edges') }}</li>
						</ul>
{#						<div class="continue_btn btn-group">#}
                            <a href="#" onclick="$('#done_tab_btn').click()" class="btn btn-success continue_btn">
                                <span style="font-size:1.5rem;">{{ _('Yes') }}</span>
                                <i class="icon icon-2x icon-fixed-width icon-arrow-right"></i>
                            </a>
{#							<button class="btn btn-success" data-bind="click: function(){ $('#done_tab_btn').click() }">#}
{#                                <i class="icon-fixed-width icon-ok"></i> {{ _('Continue') }}</button>#}
{#						</div>#}
					</div>
				</div>

				<div class="tab-pane" id="tab_done_print_labels">
                    <div>
                        <div class="qa_done_block">
                            <i class="icon-ok-sign"></i> Done
                        </div>
                    </div>
					<div class="qa_done_buttons">
                        <div><h4>Print Labels:</h4></div>
                        <div></div>
                        <div><button class="btn print_btn" data-bind="click: function(d, e){printLabel('deviceLabel', e)}">
                            <i class="icon icon-print"></i><i class="icon icon-spinner icon-spin"></i> Device Label</button></div>
                        <div><button class="btn print_btn" data-bind="click: function(d, e){printLabel('boxLabel', e)}">
                            <i class="icon icon-print"></i><i class="icon icon-spinner icon-spin"></i> Box Label</button></div>
                        <div><button class="btn print_btn" data-bind="click: function(d, e){printLabel('eanLabel', e)}">
                            <i class="icon icon-print"></i><i class="icon icon-spinner icon-spin"></i> EAN Labels</button></div>
					</div>
				</div>

			</div>
		</div>

</div>
